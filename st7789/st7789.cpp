#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <unistd.h>
#include "st7789.h"
#include <stdlib.h>
#include <cstdio>

uint8_t VGA2_8X8_FONT[][8] =
    {{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
     {0x7e, 0x81, 0xa5, 0x81, 0xbd, 0x99, 0x81, 0x7e},
     {0x7e, 0xff, 0xdb, 0xff, 0xc3, 0xe7, 0xff, 0x7e},
     {0x6c, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00},
     {0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00},
     {0x38, 0x7c, 0x38, 0xfe, 0xfe, 0xd6, 0x10, 0x38},
     {0x10, 0x38, 0x7c, 0xfe, 0xfe, 0x7c, 0x10, 0x38},
     {0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00},
     {0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff},
     {0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00},
     {0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff},
     {0x0f, 0x07, 0x0f, 0x7d, 0xcc, 0xcc, 0xcc, 0x78},
     {0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18},
     {0x3f, 0x33, 0x3f, 0x30, 0x30, 0x70, 0xf0, 0xe0},
     {0x7f, 0x63, 0x7f, 0x63, 0x63, 0x67, 0xe6, 0xc0},
     {0x18, 0xdb, 0x3c, 0xe7, 0xe7, 0x3c, 0xdb, 0x18},
     {0x80, 0xe0, 0xf8, 0xfe, 0xf8, 0xe0, 0x80, 0x00},
     {0x02, 0x0e, 0x3e, 0xfe, 0x3e, 0x0e, 0x02, 0x00},
     {0x18, 0x3c, 0x7e, 0x18, 0x18, 0x7e, 0x3c, 0x18},
     {0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00},
     {0x7f, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x00},
     {0x3e, 0x61, 0x3c, 0x66, 0x66, 0x3c, 0x86, 0x7c},
     {0x00, 0x00, 0x00, 0x00, 0x7e, 0x7e, 0x7e, 0x00},
     {0x18, 0x3c, 0x7e, 0x18, 0x7e, 0x3c, 0x18, 0xff},
     {0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x00},
     {0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00},
     {0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00},
     {0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00},
     {0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00},
     {0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00, 0x00},
     {0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x00, 0x00},
     {0x00, 0xff, 0xff, 0x7e, 0x3c, 0x18, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
     {0x18, 0x3c, 0x3c, 0x18, 0x18, 0x00, 0x18, 0x00},
     {0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00},
     {0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00},
     {0x18, 0x3e, 0x60, 0x3c, 0x06, 0x7c, 0x18, 0x00},
     {0x00, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xc6, 0x00},
     {0x38, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0x76, 0x00},
     {0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00},
     {0x0c, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x00},
     {0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x00},
     {0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00},
     {0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30},
     {0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00},
     {0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00},
     {0x38, 0x6c, 0xc6, 0xd6, 0xc6, 0x6c, 0x38, 0x00},
     {0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00},
     {0x7c, 0xc6, 0x06, 0x1c, 0x30, 0x66, 0xfe, 0x00},
     {0x7c, 0xc6, 0x06, 0x3c, 0x06, 0xc6, 0x7c, 0x00},
     {0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x1e, 0x00},
     {0xfe, 0xc0, 0xc0, 0xfc, 0x06, 0xc6, 0x7c, 0x00},
     {0x38, 0x60, 0xc0, 0xfc, 0xc6, 0xc6, 0x7c, 0x00},
     {0xfe, 0xc6, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x00},
     {0x7c, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0x7c, 0x00},
     {0x7c, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00},
     {0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00},
     {0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30},
     {0x06, 0x0c, 0x18, 0x30, 0x18, 0x0c, 0x06, 0x00},
     {0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00},
     {0x60, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x60, 0x00},
     {0x7c, 0xc6, 0x0c, 0x18, 0x18, 0x00, 0x18, 0x00},
     {0x7c, 0xc6, 0xde, 0xde, 0xde, 0xc0, 0x78, 0x00},
     {0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00},
     {0xfc, 0x66, 0x66, 0x7c, 0x66, 0x66, 0xfc, 0x00},
     {0x3c, 0x66, 0xc0, 0xc0, 0xc0, 0x66, 0x3c, 0x00},
     {0xf8, 0x6c, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00},
     {0xfe, 0x62, 0x68, 0x78, 0x68, 0x62, 0xfe, 0x00},
     {0xfe, 0x62, 0x68, 0x78, 0x68, 0x60, 0xf0, 0x00},
     {0x3c, 0x66, 0xc0, 0xc0, 0xce, 0x66, 0x3a, 0x00},
     {0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00},
     {0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00},
     {0x1e, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00},
     {0xe6, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00},
     {0xf0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00},
     {0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0x00},
     {0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00},
     {0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0xfc, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00},
     {0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xce, 0x7c, 0x0e},
     {0xfc, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0xe6, 0x00},
     {0x3c, 0x66, 0x30, 0x18, 0x0c, 0x66, 0x3c, 0x00},
     {0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x3c, 0x00},
     {0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00},
     {0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00},
     {0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00},
     {0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x3c, 0x00},
     {0xfe, 0xc6, 0x8c, 0x18, 0x32, 0x66, 0xfe, 0x00},
     {0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00},
     {0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00},
     {0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00},
     {0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff},
     {0x30, 0x18, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00},
     {0xe0, 0x60, 0x7c, 0x66, 0x66, 0x66, 0xdc, 0x00},
     {0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc6, 0x7c, 0x00},
     {0x1c, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00},
     {0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0x7c, 0x00},
     {0x3c, 0x66, 0x60, 0xf8, 0x60, 0x60, 0xf0, 0x00},
     {0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8},
     {0xe0, 0x60, 0x6c, 0x76, 0x66, 0x66, 0xe6, 0x00},
     {0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00},
     {0x06, 0x00, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c},
     {0xe0, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0xe6, 0x00},
     {0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00},
     {0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xd6, 0x00},
     {0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x00},
     {0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0x00, 0x00, 0xdc, 0x66, 0x66, 0x7c, 0x60, 0xf0},
     {0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0x1e},
     {0x00, 0x00, 0xdc, 0x76, 0x60, 0x60, 0xf0, 0x00},
     {0x00, 0x00, 0x7e, 0xc0, 0x7c, 0x06, 0xfc, 0x00},
     {0x30, 0x30, 0xfc, 0x30, 0x30, 0x36, 0x1c, 0x00},
     {0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00},
     {0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00},
     {0x00, 0x00, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00},
     {0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00},
     {0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0xfc},
     {0x00, 0x00, 0x7e, 0x4c, 0x18, 0x32, 0x7e, 0x00},
     {0x0e, 0x18, 0x18, 0x70, 0x18, 0x18, 0x0e, 0x00},
     {0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00},
     {0x70, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x70, 0x00},
     {0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
     {0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0x00},
     {0x7c, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x0c, 0x78},
     {0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00},
     {0x0c, 0x18, 0x7c, 0xc6, 0xfe, 0xc0, 0x7c, 0x00},
     {0x7c, 0x82, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00},
     {0xc6, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00},
     {0x30, 0x18, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00},
     {0x30, 0x30, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00},
     {0x00, 0x00, 0x7e, 0xc0, 0xc0, 0x7e, 0x0c, 0x38},
     {0x7c, 0x82, 0x7c, 0xc6, 0xfe, 0xc0, 0x7c, 0x00},
     {0xc6, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0x7c, 0x00},
     {0x30, 0x18, 0x7c, 0xc6, 0xfe, 0xc0, 0x7c, 0x00},
     {0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00},
     {0x7c, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00},
     {0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3c, 0x00},
     {0xc6, 0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0xc6, 0x00},
     {0x38, 0x6c, 0x7c, 0xc6, 0xfe, 0xc6, 0xc6, 0x00},
     {0x18, 0x30, 0xfe, 0xc0, 0xf8, 0xc0, 0xfe, 0x00},
     {0x00, 0x00, 0x7e, 0x18, 0x7e, 0xd8, 0x7e, 0x00},
     {0x3e, 0x6c, 0xcc, 0xfe, 0xcc, 0xcc, 0xce, 0x00},
     {0x7c, 0x82, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0xc6, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0x30, 0x18, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0x78, 0x84, 0x00, 0xcc, 0xcc, 0xcc, 0x76, 0x00},
     {0x60, 0x30, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00},
     {0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0xfc},
     {0xc6, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x00},
     {0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0x18, 0x18, 0x7e, 0xc0, 0xc0, 0x7e, 0x18, 0x18},
     {0x38, 0x6c, 0x64, 0xf0, 0x60, 0x66, 0xfc, 0x00},
     {0x66, 0x66, 0x3c, 0x7e, 0x18, 0x7e, 0x18, 0x18},
     {0xf8, 0xcc, 0xcc, 0xfa, 0xc6, 0xcf, 0xc6, 0xc7},
     {0x0e, 0x1b, 0x18, 0x3c, 0x18, 0xd8, 0x70, 0x00},
     {0x18, 0x30, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00},
     {0x0c, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3c, 0x00},
     {0x0c, 0x18, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},
     {0x18, 0x30, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00},
     {0x76, 0xdc, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x00},
     {0x76, 0xdc, 0x00, 0xe6, 0xf6, 0xde, 0xce, 0x00},
     {0x3c, 0x6c, 0x6c, 0x3e, 0x00, 0x7e, 0x00, 0x00},
     {0x38, 0x6c, 0x6c, 0x38, 0x00, 0x7c, 0x00, 0x00},
     {0x18, 0x00, 0x18, 0x18, 0x30, 0x63, 0x3e, 0x00},
     {0x00, 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0xfe, 0x06, 0x06, 0x00, 0x00},
     {0x63, 0xe6, 0x6c, 0x7e, 0x33, 0x66, 0xcc, 0x0f},
     {0x63, 0xe6, 0x6c, 0x7a, 0x36, 0x6a, 0xdf, 0x06},
     {0x18, 0x00, 0x18, 0x18, 0x3c, 0x3c, 0x18, 0x00},
     {0x00, 0x33, 0x66, 0xcc, 0x66, 0x33, 0x00, 0x00},
     {0x00, 0xcc, 0x66, 0x33, 0x66, 0xcc, 0x00, 0x00},
     {0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88},
     {0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa},
     {0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd},
     {0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18},
     {0x36, 0x36, 0x36, 0x36, 0xf6, 0x36, 0x36, 0x36},
     {0x00, 0x00, 0x00, 0x00, 0xfe, 0x36, 0x36, 0x36},
     {0x00, 0x00, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18},
     {0x36, 0x36, 0xf6, 0x06, 0xf6, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36},
     {0x00, 0x00, 0xfe, 0x06, 0xf6, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0xf6, 0x06, 0xfe, 0x00, 0x00, 0x00},
     {0x36, 0x36, 0x36, 0x36, 0xfe, 0x00, 0x00, 0x00},
     {0x18, 0x18, 0xf8, 0x18, 0xf8, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00},
     {0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18},
     {0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00},
     {0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18},
     {0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0x37, 0x30, 0x3f, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x3f, 0x30, 0x37, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0xf7, 0x00, 0xff, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0xff, 0x00, 0xf7, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36},
     {0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00},
     {0x36, 0x36, 0xf7, 0x00, 0xf7, 0x36, 0x36, 0x36},
     {0x18, 0x18, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00},
     {0x36, 0x36, 0x36, 0x36, 0xff, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0xff, 0x00, 0xff, 0x18, 0x18, 0x18},
     {0x00, 0x00, 0x00, 0x00, 0xff, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0x36, 0x36, 0x3f, 0x00, 0x00, 0x00},
     {0x18, 0x18, 0x1f, 0x18, 0x1f, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18},
     {0x00, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x36, 0x36},
     {0x36, 0x36, 0x36, 0x36, 0xff, 0x36, 0x36, 0x36},
     {0x18, 0x18, 0xff, 0x18, 0xff, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18},
     {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
     {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff},
     {0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0},
     {0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f},
     {0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x76, 0xdc, 0xc8, 0xdc, 0x76, 0x00},
     {0x78, 0xcc, 0xcc, 0xd8, 0xcc, 0xc6, 0xcc, 0x00},
     {0xfe, 0xc6, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00},
     {0x00, 0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x00},
     {0xfe, 0xc6, 0x60, 0x30, 0x60, 0xc6, 0xfe, 0x00},
     {0x00, 0x00, 0x7e, 0xd8, 0xd8, 0xd8, 0x70, 0x00},
     {0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7c, 0xc0},
     {0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x00},
     {0x7e, 0x18, 0x3c, 0x66, 0x66, 0x3c, 0x18, 0x7e},
     {0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0x6c, 0x38, 0x00},
     {0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x6c, 0xee, 0x00},
     {0x0e, 0x18, 0x0c, 0x3e, 0x66, 0x66, 0x3c, 0x00},
     {0x00, 0x00, 0x7e, 0xdb, 0xdb, 0x7e, 0x00, 0x00},
     {0x06, 0x0c, 0x7e, 0xdb, 0xdb, 0x7e, 0x60, 0xc0},
     {0x1e, 0x30, 0x60, 0x7e, 0x60, 0x30, 0x1e, 0x00},
     {0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00},
     {0x00, 0xfe, 0x00, 0xfe, 0x00, 0xfe, 0x00, 0x00},
     {0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x7e, 0x00},
     {0x30, 0x18, 0x0c, 0x18, 0x30, 0x00, 0x7e, 0x00},
     {0x0c, 0x18, 0x30, 0x18, 0x0c, 0x00, 0x7e, 0x00},
     {0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18},
     {0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0x70},
     {0x00, 0x18, 0x00, 0x7e, 0x00, 0x18, 0x00, 0x00},
     {0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00},
     {0x38, 0x6c, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00},
     {0x0f, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x3c, 0x1c},
     {0x6c, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00},
     {0x78, 0x0c, 0x18, 0x30, 0x7c, 0x00, 0x00, 0x00},
     {0x00, 0x00, 0x3c, 0x3c, 0x3c, 0x3c, 0x00, 0x00},
     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

uint8_t VGA1_16X32_FONT[][64] =
    {
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x7f, 0xfe, 0x7f, 0xfe, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x7f, 0xfe, 0x7f, 0xfe, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x01, 0x80, 0x0f, 0xf0, 0x0f, 0xf0, 0x39, 0x9c, 0x39, 0x9c, 0x71, 0x8e, 0x71, 0x8e, 0x71, 0x80, 0x71, 0x80, 0x39, 0x80, 0x39, 0x80, 0x0f, 0xf0, 0x0f, 0xf0, 0x01, 0x9c, 0x01, 0x9c, 0x01, 0x8e, 0x01, 0x8e, 0x71, 0x8e, 0x71, 0x8e, 0x39, 0x9c, 0x39, 0x9c, 0x0f, 0xf0, 0x0f, 0xf0, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x1c, 0x1e, 0x1c, 0x1e, 0x38, 0x1e, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x3c, 0x0e, 0x3c, 0x1c, 0x3c, 0x1c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x07, 0xc0, 0x1c, 0x70, 0x1c, 0x70, 0x38, 0x38, 0x38, 0x38, 0x1c, 0x70, 0x1c, 0x70, 0x07, 0xc0, 0x07, 0xc0, 0x0f, 0xce, 0x0f, 0xce, 0x38, 0xfc, 0x38, 0xfc, 0x70, 0x78, 0x70, 0x78, 0x70, 0x78, 0x70, 0x78, 0x38, 0xfc, 0x38, 0xfc, 0x0f, 0xce, 0x0f, 0xce, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x38, 0x0e, 0x38, 0x03, 0xe0, 0x03, 0xe0, 0x3f, 0xfe, 0x3f, 0xfe, 0x03, 0xe0, 0x03, 0xe0, 0x0e, 0x38, 0x0e, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x3f, 0xfe, 0x3f, 0xfe, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x07, 0xe0, 0x1c, 0x38, 0x1c, 0x38, 0x38, 0x3c, 0x38, 0x3c, 0x38, 0x7c, 0x38, 0x7c, 0x38, 0xdc, 0x38, 0xdc, 0x39, 0x9c, 0x39, 0x9c, 0x3b, 0x1c, 0x3b, 0x1c, 0x3e, 0x1c, 0x3e, 0x1c, 0x3c, 0x1c, 0x3c, 0x1c, 0x1c, 0x38, 0x1c, 0x38, 0x07, 0xe0, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x0f, 0xc0, 0x0f, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x70, 0x00, 0x70, 0x01, 0xc0, 0x01, 0xc0, 0x07, 0x00, 0x07, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x01, 0xf0, 0x01, 0xf0, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x01, 0xf0, 0x03, 0xf0, 0x03, 0xf0, 0x07, 0x70, 0x07, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x38, 0x70, 0x38, 0x70, 0x3f, 0xfc, 0x3f, 0xfc, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x3f, 0xf8, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x0e, 0x1c, 0x0e, 0x07, 0xfe, 0x07, 0xfe, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x70, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x07, 0xe0, 0x1c, 0x38, 0x1c, 0x38, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x70, 0x0e, 0x70, 0x0e, 0x71, 0xfe, 0x71, 0xfe, 0x73, 0x8e, 0x73, 0x8e, 0x73, 0x8e, 0x73, 0x8e, 0x73, 0x8e, 0x73, 0x8e, 0x71, 0xfc, 0x71, 0xfc, 0x70, 0x00, 0x70, 0x00, 0x38, 0x00, 0x38, 0x00, 0x0f, 0xfc, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0xc0, 0x07, 0xe0, 0x07, 0xe0, 0x0e, 0x70, 0x0e, 0x70, 0x1c, 0x38, 0x1c, 0x38, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xfc, 0x3f, 0xfc, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xf0, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xf0, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x3f, 0xfc, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xe0, 0x3f, 0xe0, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xfc, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x3f, 0xfc, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xe0, 0x3f, 0xe0, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x3e, 0x38, 0x3e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x3f, 0xfe, 0x3f, 0xfe, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x0e, 0x38, 0x0e, 0x38, 0x03, 0xe0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0xe0, 0x1c, 0xe0, 0x1d, 0xc0, 0x1d, 0xc0, 0x1f, 0x80, 0x1f, 0x80, 0x1f, 0x80, 0x1f, 0x80, 0x1d, 0xc0, 0x1d, 0xc0, 0x1c, 0xe0, 0x1c, 0xe0, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x1c, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xfc, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1e, 0x78, 0x1e, 0x7c, 0x3e, 0x7c, 0x3e, 0x7e, 0x7e, 0x7e, 0x7e, 0x77, 0xee, 0x77, 0xee, 0x73, 0xce, 0x73, 0xce, 0x71, 0x8e, 0x71, 0x8e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x3c, 0x0e, 0x3c, 0x0e, 0x3e, 0x0e, 0x3e, 0x0e, 0x3f, 0x0e, 0x3f, 0x0e, 0x3b, 0x8e, 0x3b, 0x8e, 0x39, 0xce, 0x39, 0xce, 0x38, 0xee, 0x38, 0xee, 0x38, 0x7e, 0x38, 0x7e, 0x38, 0x3e, 0x38, 0x3e, 0x38, 0x1e, 0x38, 0x1e, 0x38, 0x0e, 0x38, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0xee, 0x38, 0xee, 0x1c, 0x7c, 0x1c, 0x7c, 0x07, 0xf8, 0x07, 0xf8, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0xe0, 0x38, 0xe0, 0x38, 0x70, 0x38, 0x70, 0x38, 0x38, 0x38, 0x38, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x0f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x00, 0x70, 0x00, 0x38, 0x00, 0x38, 0x00, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x70, 0x0e, 0x70, 0x07, 0xe0, 0x07, 0xe0, 0x03, 0xc0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x71, 0x8e, 0x71, 0x8e, 0x73, 0xce, 0x73, 0xce, 0x77, 0xee, 0x77, 0xee, 0x3e, 0x7c, 0x3e, 0x7c, 0x1c, 0x38, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x70, 0x0e, 0x70, 0x07, 0xe0, 0x07, 0xe0, 0x03, 0xc0, 0x03, 0xc0, 0x07, 0xe0, 0x07, 0xe0, 0x0e, 0x70, 0x0e, 0x70, 0x1c, 0x38, 0x1c, 0x38, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x0e, 0x38, 0x0e, 0x38, 0x07, 0x70, 0x07, 0x70, 0x03, 0xe0, 0x03, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x70, 0x00, 0x38, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x03, 0xc0, 0x03, 0xc0, 0x07, 0xe0, 0x07, 0xe0, 0x0e, 0x70, 0x0e, 0x70, 0x1c, 0x38, 0x1c, 0x38, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0x00, 0x0e, 0x00, 0x0e, 0x0f, 0xfe, 0x0f, 0xfe, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x0f, 0xfe, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x3f, 0xf8, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x0f, 0xf8, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x07, 0xfe, 0x07, 0xfe, 0x1c, 0x0e, 0x1c, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x0f, 0xfe, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x3f, 0xfe, 0x3f, 0xfe, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x0f, 0xfc, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xf8, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x0f, 0xf0, 0x0f, 0xf0, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x0f, 0xfe, 0x0f, 0xfe, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x1f, 0xf8, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3b, 0xf8, 0x3b, 0xf8, 0x3c, 0x0e, 0x3c, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x0f, 0x80, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0xe0, 0x0e, 0xe0, 0x0f, 0xc0, 0x0f, 0xc0, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x38, 0x0e, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x78, 0x3e, 0x78, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x39, 0xce, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x3f, 0xe0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf0, 0x1c, 0x1c, 0x1c, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x07, 0xf0, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x07, 0xfe, 0x1c, 0x0e, 0x1c, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x0e, 0x1c, 0x0e, 0x07, 0xfe, 0x07, 0xfe, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x3f, 0xf0, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x0f, 0xfc, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x0f, 0xf8, 0x0f, 0xf8, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x1f, 0xf8, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x1f, 0xfc, 0x1f, 0xfc, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x0f, 0xfc, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x0e, 0x70, 0x0e, 0x38, 0x1c, 0x38, 0x1c, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x70, 0x0e, 0x70, 0x07, 0xe0, 0x07, 0xe0, 0x03, 0xc0, 0x03, 0xc0, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x38, 0x0e, 0x39, 0xce, 0x39, 0xce, 0x3b, 0xee, 0x3b, 0xee, 0x1f, 0x7c, 0x1f, 0x7c, 0x0e, 0x38, 0x0e, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x1c, 0x38, 0x0e, 0x70, 0x0e, 0x70, 0x07, 0xe0, 0x07, 0xe0, 0x03, 0xc0, 0x03, 0xc0, 0x07, 0xe0, 0x07, 0xe0, 0x0e, 0x70, 0x0e, 0x70, 0x1c, 0x38, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x0e, 0x38, 0x0e, 0x1c, 0x1c, 0x1c, 0x1c, 0x0e, 0x38, 0x0e, 0x38, 0x07, 0x70, 0x07, 0x70, 0x03, 0xe0, 0x03, 0xe0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x70, 0x00, 0x70, 0x01, 0xc0, 0x01, 0xc0, 0x07, 0x00, 0x07, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x3f, 0xfe, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xf8, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x1e, 0x00, 0x1e, 0x00, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x03, 0x80, 0x03, 0x80, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x78, 0x00, 0x78, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x03, 0x80, 0x03, 0x80, 0x1f, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x9e, 0x07, 0x9e, 0x3c, 0xf0, 0x3c, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x07, 0x70, 0x07, 0x70, 0x1c, 0x1c, 0x1c, 0x1c, 0x70, 0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x07, 0x7f, 0xff, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};
// Define constants
#define ST7789_NOP 0x00
#define ST7789_SWRESET 0x01
#define ST7789_RDDID 0x04
#define ST7789_RDDST 0x09
#define ST7789_SLPIN 0x10
#define ST7789_SLPOUT 0x11
#define ST7789_PTLON 0x12
#define ST7789_NORON 0x13
#define ST7789_INVOFF 0x20
#define ST7789_INVON 0x21
#define ST7789_DISPOFF 0x28
#define ST7789_DISPON 0x29
#define ST7789_CASET 0x2A
#define ST7789_RASET 0x2B
#define ST7789_RAMWR 0x2C
#define ST7789_RAMRD 0x2E
#define ST7789_PTLAR 0x30
#define ST7789_VSCRDEF 0x33
#define ST7789_COLMOD 0x3A
#define ST7789_MADCTL 0x36
#define ST7789_VSCSAD 0x37
#define ST7789_MADCTL_MY 0x80
#define ST7789_MADCTL_MX 0x40
#define ST7789_MADCTL_MV 0x20
#define ST7789_MADCTL_ML 0x10
#define ST7789_MADCTL_BGR 0x08
#define ST7789_MADCTL_MH 0x04
#define ST7789_MADCTL_RGB 0x00
#define ST7789_RDID1 0xDA
#define ST7789_RDID2 0xDB
#define ST7789_RDID3 0xDC
#define ST7789_RDID4 0xDD

#define COLOR_MODE_65K 0x50
#define COLOR_MODE_262K 0x60
#define COLOR_MODE_12BIT 0x03
#define COLOR_MODE_16BIT 0x05
#define COLOR_MODE_18BIT 0x06
#define COLOR_MODE_16M 0x07

#define BLACK 0x0000
#define BLUE 0x001F
#define RED 0xF800
#define GREEN 0x07E0
#define CYAN 0x07FF
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF

#define _ENCODE_PIXEL  ">H"
#define _ENCODE_POS    ">HH"
#define _ENCODE_RECT   ">BBB"

#define _BUFFER_SIZE 2

#define SPI_TX_PIN 3
#define SPI_SCK_PIN 2
#define SPI_DC_PIN 1
#define SPI_RESET_PIN 0

void _encode_pos(int x, int y, uint8_t *data) {
    data[0] = x >> 8;
    data[1] = x & 0xFF;
    data[2] = y >> 8;
    data[3] = y & 0xFF;
}

void _encode_pixel(uint16_t color, uint8_t *data) {
    data[0] = (color >> 8) & 0xFF;
    data[1] = color & 0xFF;
}

ST7789::ST7789(spi_inst_t *spi, int width, int height, uint8_t reset, uint8_t dc, uint8_t cs, uint8_t backlight, int xstart, int ystart, int rotation) {
    if ((width != 240 || height != 240) && (width != 135 || height != 240)) {
        // raise ValueError("Unsupported display. Only 240x240 and 135x240 are supported.")
    }
    printf("ST7789::ST7789\n");
    this->_display_width = width;
    this->width = width;
    this->_display_height = height;
    this->height = height;
    this->spi = spi;
    this->reset = reset;
    this->dc = dc;
    //this->cs = cs;
    //this->backlight = backlight;
    this->_rotation = rotation % 4;
    this->xstart = xstart;
    this->ystart = ystart;        

    spi_write_blocking(spi, (const uint8_t[]){0xff}, 1);
    printf("111\n");
    this->hard_reset();
    printf("111\n");
    this->soft_reset();
    printf("111\n");
    this->sleep_mode(false);
    printf("111\n");

    this->set_color_mode(COLOR_MODE_65K | COLOR_MODE_16BIT);
    printf("111\n");
    sleep_ms(50);
    this->rotation(this->_rotation);
    printf("111\n");
    this->inversion_mode(true);
    printf("111\n");
    sleep_ms(10);
    write_command(ST7789_NORON);
    printf("111\n");
    sleep_ms(10);
    printf("fill\n");
    this->fill(RED);
    printf("fill end\n");
    printf("111\n");
    write_command(ST7789_DISPON);
    sleep_ms(500);
}

void ST7789::write(uint8_t command, uint8_t *data) {
    gpio_put(SPI_DC_PIN, 0);
    spi_write_blocking(spi, &command, 1);
    if (data != NULL) {
        gpio_put(SPI_DC_PIN, 1);
        int ret = spi_write_blocking(spi, data, 1);
    }
}

void ST7789::write_command(uint8_t command) {
    gpio_put(SPI_DC_PIN, 0);
    spi_write_blocking(spi, &command, 1);
}

void ST7789::write_data(uint8_t *data, int length) {
    gpio_put(SPI_DC_PIN, 1);
    spi_write_blocking(spi, data, length);
}

void ST7789::hard_reset() {
    gpio_put(SPI_RESET_PIN, 1);
    sleep_ms(50);
    gpio_put(SPI_RESET_PIN, 0);
    sleep_ms(50);
    gpio_put(SPI_RESET_PIN, 1);
    sleep_ms(150);
}

void ST7789::soft_reset() {
    write_command(ST7789_SWRESET);
    sleep_ms(150);
}

void ST7789::sleep_mode(bool value) {
    if (value) {
        write_command(ST7789_SLPIN);
    } else {
        write_command(ST7789_SLPOUT);
    }
}

void ST7789::inversion_mode(bool value) {
    if (value) {
        write_command(ST7789_INVON);
    } else {
        write_command(ST7789_INVOFF);
    }
}

void ST7789::set_color_mode(uint8_t mode) {
    uint8_t data = mode & 0x77;
    write_command(ST7789_COLMOD);
    write_data(&data, 1);
}

void ST7789::rotation(int rotation) {
    this->_rotation = rotation % 4;
    uint8_t madctl = 0;
    switch (this->_rotation) {
        case 0:
            madctl = ST7789_MADCTL_RGB;
            this->width = this->_display_width;
            this->height = this->_display_height;
            if (this->_display_width == 135) {
                this->xstart = 52;
                this->ystart = 40;
            }
            break;
        case 1:
            madctl = ST7789_MADCTL_MX | ST7789_MADCTL_MV | ST7789_MADCTL_RGB;
            this->width = this->_display_width;
            this->height = this->_display_height;
            if (this->_display_width == 135) {
                this->xstart = 40;
                this->ystart = 53;
            }
            break;
        case 2:
            madctl = ST7789_MADCTL_MX | ST7789_MADCTL_MY | ST7789_MADCTL_RGB;
            this->width = this->_display_width;
            this->height = this->_display_height;
            if (this->_display_width == 135) {
                this->xstart = 53;
                this->ystart = 40;
            }
            break;
        case 3:
            madctl = ST7789_MADCTL_MV | ST7789_MADCTL_MY | ST7789_MADCTL_RGB;
            this->width = this->_display_width;
            this->height = this->_display_height;
            if (this->_display_width == 135) {
                this->xstart = 40;
                this->ystart = 52;
            }
            break;
    }
    write_command(ST7789_MADCTL);
    write_data(&madctl, 1);
}

void ST7789::_set_columns(int start, int end) {
    //if (start <= end && end <= this->width) {
        uint8_t data[4] = {(uint8_t)((start >> 8) & 0xFF), 
                            (uint8_t)(start & 0xFF), 
                            (uint8_t)((end >> 8) & 0xFF), 
                            (uint8_t)(end & 0xFF)};
        write_command(ST7789_CASET);
        write_data(data, 4);
    //}
}

void ST7789::_set_rows(int start, int end) {
    //if (start <= end && end <= this->height) {
        uint8_t data[4] = {(uint8_t)(start >> 8), (uint8_t)(start & 0xFF), (uint8_t)(end >> 8), (uint8_t)(end & 0xFF)};
        write_command(ST7789_RASET);
        write_data(data, 4);
    //}
}

void ST7789::set_window(int x0, int y0, int x1, int y1) {
    _set_columns(x0, x1);
    _set_rows(y0, y1);
    write_command(ST7789_RAMWR);
}

void ST7789::vline(int x, int y, int length, uint16_t color) {
    fill_rect(x, y, 1, length, color);
}

void ST7789::hline(int x, int y, int length, uint16_t color) {
    fill_rect(x, y, length, 1, color);
}

void ST7789::pixel(int x, int y, uint16_t color) {
    set_window(x, y, x, y);
    uint8_t data[2];
    _encode_pixel(color, data);
    write_data(data, 2);
}

void ST7789::blit_buffer(uint8_t *buffer, int x, int y, int width, int height) {
    set_window(x, y, x + width - 1, y + height - 1);
    write_data(buffer, width * height * 2);
}

void ST7789::rect(int x, int y, int w, int h, uint16_t color) {
    hline(x, y, w, color);
    vline(x, y, h, color);
    vline(x + w - 1, y, h, color);
    hline(x, y + h - 1, w, color);
}

void ST7789::fill_rect(int x, int y, int width, int height, uint16_t color) {
    set_window(x, y, x + width - 1, y + height - 1);
    // int chunks = (width * height) / _BUFFER_SIZE;
    // int rest = (width * height) % _BUFFER_SIZE;
    uint8_t pixel[2];
    _encode_pixel(color, pixel);
    // uint8_t data[_BUFFER_SIZE * 2];
    // for (int i = 0; i < _BUFFER_SIZE; i += 2) {
    //     data[i] = pixel[0];
    //     data[i + 1] = pixel[1];
    // }
    // printf("chunks: %d\n", chunks);
    // printf("rest: %d\n", rest);
    // printf("[0]: %d\n", data[0]);
    // printf("[1]: %d\n", data[1]);
    // printf("[2]: %d\n", data[2]);
    //if (chunks) {
        for (int i = 0; i < (uint32_t)width * height; i++) {
            write_data(pixel,  2 );
        }
    //}
    // if (rest) {
    //     write(0, data);
    // }
    // uint8_t data[2];
    // data[0] = (uint8_t)(color >> 8);
    // data[1] = (uint8_t)(color & 0xff);

    // // TODO 优化
    // for (uint32_t i = 0; i < (uint32_t)width * height; i++) {
    //     write_data(data, 2);
    // }
}
void ST7789::fill(uint16_t color) {
    fill_rect(0, 0, width, height, color);
}

void ST7789::line(int x0, int y0, int x1, int y1, uint16_t color) {
    int diff_y = (y1 - y0)>0 ? (y1 - y0) : (y0 - y1);
    int diff_x = (x1 - x0)>0 ? (x1 - x0) : (x0 - x1);
    bool steep = diff_y > diff_x;
    if (steep) {
        int temp = x0;
        x0 = y0;
        y0 = temp;
        temp = x1;
        x1 = y1;
        y1 = temp;
    }
    if (x0 > x1) {
        int temp = x0;
        x0 = x1;
        x1 = temp;
        temp = y0;
        y0 = y1;
        y1 = temp;
    }
    int dx = x1 - x0;
    int dy = abs(y1 - y0);
    int err = dx / 2;
    int ystep = y0 < y1 ? 1 : -1;
    while (x0 <= x1) {
        if (steep) {
            pixel(y0, x0, color);
        } else {
            pixel(x0, y0, color);
        }
        err -= dy;
        if (err < 0) {
            y0 += ystep;
            err += dx;
        }
        x0++;
    }
}

void ST7789::vscrdef(int tfa, int vsa, int bfa) {
    uint8_t data[6];
    data[0] = tfa >> 8;
    data[1] = tfa & 0xFF;
    data[2] = vsa >> 8;
    data[3] = vsa & 0xFF;
    data[4] = bfa >> 8;
    data[5] = bfa & 0xFF;
    write(ST7789_VSCRDEF, data);
}

void ST7789::vscsad(int vssa) {
    uint8_t data[2];
    data[0] = vssa >> 8;
    data[1] = vssa & 0xFF;
    write(ST7789_VSCSAD, data);
}

void ST7789::text8(const uint8_t *font, const char *text, int x0, int y0, uint16_t color, uint16_t background) {
    for (int i = 0; i < strlen(text); i++) 
    {
        char ch = text[i];
        int WIDTH = 8;
        int HEIGHT = 8;
        int FIRST = 0x00;
        int LAST = 0xff;

        if ((ch >= FIRST) && (ch <= LAST) && ((x0 + WIDTH) <= width) && ((y0 + HEIGHT) <= height)) 
        {
            int passes = 0;
            int size = 0;
            int each = 0;

            if (HEIGHT == 8) 
            {
                passes = 1;
                size = 8;
                each = 0;
            } 
            else 
            {
                passes = 2;
                size = 16;
                each = 8;
            }
            for (int line = 0; line < passes; line++) 
            {
                int idx = (ch - FIRST) * size + (each * line);
                uint8_t buffer[128];
                for (int j = 0; j < 8; j++) 
                {
                    buffer[j * 16] = VGA2_8X8_FONT[idx/8][j] & 0x80 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 1] = VGA2_8X8_FONT[idx/8][j] & 0x80 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 2] = VGA2_8X8_FONT[idx/8][j] & 0x40 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 3] = VGA2_8X8_FONT[idx/8][j] & 0x40 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 4] = VGA2_8X8_FONT[idx/8][j] & 0x20 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 5] = VGA2_8X8_FONT[idx/8][j] & 0x20 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 6] = VGA2_8X8_FONT[idx/8][j] & 0x10 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 7] = VGA2_8X8_FONT[idx/8][j] & 0x10 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 8] = VGA2_8X8_FONT[idx/8][j] & 0x08 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 9] = VGA2_8X8_FONT[idx/8][j] & 0x08 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 10] = VGA2_8X8_FONT[idx/8][j] & 0x04 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 11] = VGA2_8X8_FONT[idx/8][j] & 0x04 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 12] = VGA2_8X8_FONT[idx/8][j] & 0x02 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 13] = VGA2_8X8_FONT[idx/8][j] & 0x02 ? color & 0xFF : background & 0xFF;
                    buffer[j * 16 + 14] = VGA2_8X8_FONT[idx/8][j] & 0x01 ? color >> 8 : background >> 8;
                    buffer[j * 16 + 15] = VGA2_8X8_FONT[idx/8][j] & 0x01 ? color & 0xFF : background & 0xFF;
                }
                blit_buffer(buffer, x0, y0 + 8 * line, 8, 8);
            }
        }
        x0 += 8;
    }
}

void ST7789::text16(const uint8_t *font, const char *text, int x0, int y0, uint16_t color, uint16_t background) {
    for (int i = 0; i < strlen(text); i++) {
        char ch = text[i];
        if (ch >= font[0] && ch <= font[1] && x0 + font[2] <= width && y0 + font[3] <= height) {
            int idx = (ch - font[0]) * font[4];
            uint8_t buffer[128];
            for (int j = 0; j < 16; j++) {
                buffer[j * 8] = font[idx + j] & 0x80 ? color >> 8 : background >> 8;
                buffer[j * 8 + 1] = font[idx + j] & 0x40 ? color >> 8 : background >> 8;
                buffer[j * 8 + 2] = font[idx + j] & 0x20 ? color >> 8 : background >> 8;
                buffer[j * 8 + 3] = font[idx + j] & 0x10 ? color >> 8 : background >> 8;
                buffer[j * 8 + 4] = font[idx + j] & 0x08 ? color >> 8 : background >> 8;
                buffer[j * 8 + 5] = font[idx + j] & 0x04 ? color >> 8 : background >> 8;
                buffer[j * 8 + 6] = font[idx + j] & 0x02 ? color >> 8 : background >> 8;
                buffer[j * 8 + 7] = font[idx + j] & 0x01 ? color >> 8 : background >> 8;
            }
            blit_buffer(buffer, x0, y0 + 16 * i, 16, 16);
        }
        x0 += 16;
    }
}

void ST7789::text(const uint8_t *font, const char *text, int x0, int y0, uint16_t color, uint16_t background) {
    if (font[2] == 8) {
        text8(font, text, x0, y0, color, background);
    } else {
        text16(font, text, x0, y0, color, background);
    }
}
